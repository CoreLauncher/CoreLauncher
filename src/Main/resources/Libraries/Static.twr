{
  "BuildInfo":{
    "TypeWriter":{
      "Version":"4.7.1",
      "Licence":"MIT",
      "Name":"TypeWriter"
    },
    "Date":"Wed Oct  5 22:17:09 2022"
  },
  "Package":{
    "ID":"Static",
    "Entrypoints":{
      "Main":"ga.corebyte.Static.Test"
    },
    "InfoVersion":1,
    "Author":{
      "Contributors":[],
      "Developers":["CoreByte"]
    },
    "Name":"Static",
    "Version":"1.0.0",
    "Dependencies":{
      "Luvit":["creationix/weblit","creationix/coro-spawn","creationix/mime","luvit/json","creationix/base64","luvit/url"],
      "Dua":[],
      "Git":[]
    },
    "Description":"Static server",
    "Contact":{
      "Website":"",
      "Source":"",
      "Socials":[]
    }
  },
  "Code":{
    "ga.corebyte.Static.Main":{
      "Code":"return Import(\"ga.corebyte.Static.Server\")",
      "Type":"Code"
    },
    "ga.corebyte.Static.Server":{
      "Code":"return function (Settings)\r\n    local Settings = Settings or {}\r\n    Settings.Host = Settings.Host or \"0.0.0.0\"\r\n    Settings.Port = Settings.Port or 80\r\n    Settings.Path = Settings.Path or require(\"path\").resolve(\"./\")\r\n\r\n    local FS = require(\"fs\")\r\n    local AppData = TypeWriter.ApplicationData .. \"/StaticServer/\"\r\n    local ServerExe = AppData .. \"/Server.twr\"\r\n    FS.mkdirSync(AppData)\r\n    FS.writeFileSync(ServerExe, TypeWriter.LoadedPackages[\"Static\"].Resources[\"/Server.twr\"])\r\n\r\n    local Server, Error = require(\"coro-spawn\")(\r\n        TypeWriter.This,\r\n        {\r\n            args = {\r\n                \"execute\", \"--input=\" .. ServerExe,\r\n                \"--serverargs=\" .. require(\"base64\").encode(require(\"json\").encode(Settings))\r\n            },\r\n            stdio = {\r\n                process.stdin.handle,\r\n                process.stdout.handle,\r\n                process.stderr.handle\r\n            }\r\n        }\r\n    )\r\n\r\n    coroutine.wrap(function ()\r\n        Server.waitExit()\r\n    end)()\r\n\r\n    return string.format(\"http://localhost:%s/\", Settings.Port), function ()\r\n        return require(\"uv\").process_kill(Server.handle)\r\n    end\r\nend",
      "Type":"Code"
    },
    "ga.corebyte.Static":{
      "Type":"Redirect",
      "RedirectTo":"ga.corebyte.Static.Main"
    },
    "ga.corebyte.Static.Test":{
      "Code":"local Url, KillServer = Import(\"ga.corebyte.Static\")(\r\n    {\r\n    }\r\n)\r\n\r\nWait(3)\r\nKillServer()",
      "Type":"Code"
    }
  },
  "Resources":{
    "/Server.twr":"{\n  \"BuildInfo\":{\n    \"TypeWriter\":{\n      \"Version\":\"4.7.1\",\n      \"Licence\":\"MIT\",\n      \"Name\":\"TypeWriter\"\n    },\n    \"Date\":\"Wed Oct  5 22:17:08 2022\"\n  },\n  \"Package\":{\n    \"Entrypoints\":{\n      \"Main\":\"ga.corebyte.Server\"\n    },\n    \"Author\":{\n      \"Developers\":[\"CoreByte\"],\n      \"Contributors\":[]\n    },\n    \"Description\":\"Static\",\n    \"Name\":\"Static-Server\",\n    \"Version\":\"1.0.0\",\n    \"Dependencies\":{\n      \"Dua\":[],\n      \"Git\":[],\n      \"Luvit\":[\"creationix/weblit\",\"creationix/coro-spawn\",\"creationix/mime\",\"luvit/json\",\"creationix/base64\"]\n    },\n    \"ID\":\"Static-Server\",\n    \"Contact\":{\n      \"Socials\":[],\n      \"Website\":\"\",\n      \"Source\":\"\"\n    },\n    \"InfoVersion\":1\n  },\n  \"Code\":{\n    \"ga.corebyte.Server.Static\":{\n      \"Code\":\"local Path = require(\\\"path\\\")\\r\\nlocal FS = require(\\\"fs\\\")\\r\\nlocal Mimes = require('mime')\\r\\n\\r\\nlocal UrlParse = require('url').parse\\r\\nlocal DecodeUrl = require('querystring').urldecode\\r\\nlocal function ParseURL(Url)\\r\\n    return DecodeUrl(UrlParse(Url).pathname)\\r\\nend\\r\\n\\r\\nreturn function (Root)\\r\\n    Root = Path.normalize(Root)\\r\\n    local Index = \\\"index.html\\\"\\r\\n\\r\\n    return function (Request, Response, Next)\\r\\n        if Request.method ~= 'GET' and Request.method ~= 'HEAD' then return Next() end\\r\\n        local Url = ParseURL(Request.path)\\r\\n\\r\\n        local function ServeFiles(ServeUrl)\\r\\n            local Stat = FS.statSync(ServeUrl)\\r\\n            if Stat.type == \\\"directory\\\" then\\r\\n                return ServeFiles(ServeUrl .. Index)\\r\\n            end\\r\\n\\r\\n            if FS.existsSync(ServeUrl) then\\r\\n                p(ServeUrl)\\r\\n                Response.headers[\\\"Content-Type\\\"] = Mimes.getType(ServeUrl)\\r\\n                Response.headers[\\\"Content-Length\\\"] = Stat.size\\r\\n                Response.headers[\\\"Cache-Control\\\"] = 'public, max-age=' .. 0\\r\\n                Response.code = 200\\r\\n                Response.body = ({FS.readFileSync(ServeUrl)})[1]\\r\\n            else\\r\\n                Response.code = 404\\r\\n            end\\r\\n        end\\r\\n\\r\\n        ServeFiles(Path.join(Root, Url))\\r\\n    end\\r\\nend\",\n      \"Type\":\"Code\"\n    },\n    \"ga.corebyte.Server.Main\":{\n      \"Code\":\"local App = require('weblit-app')\\r\\np(\\\"a\\\")\\r\\nlocal Arguments = require(\\\"json\\\").decode(require(\\\"base64\\\").decode(TypeWriter.ArgumentParser:GetArgument(\\\"serverargs\\\", \\\"serverargs\\\")))\\r\\np(\\\"b\\\")\\r\\n\\r\\nApp.bind(\\r\\n    {\\r\\n        host = Arguments.Host,\\r\\n        port = Arguments.Port\\r\\n    }\\r\\n)\\r\\n\\r\\nApp.use(\\r\\n    Import(\\\"ga.corebyte.Server.Static\\\")(\\r\\n        Arguments.Path\\r\\n    )\\r\\n)\\r\\n\\r\\nApp.start()\",\n      \"Type\":\"Code\"\n    },\n    \"ga.corebyte.Server\":{\n      \"RedirectTo\":\"ga.corebyte.Server.Main\",\n      \"Type\":\"Redirect\"\n    }\n  },\n  \"Resources\":{\n    \"/package.info.lua\":\"-- See https://github.com/Dot-lua/TypeWriter/wiki/package.info.lua-format for more info\\r\\n\\r\\nreturn { InfoVersion = 1, -- Dont touch this\\r\\n\\r\\n    ID = \\\"Static-Server\\\", -- A unique id \\r\\n    Name = \\\"Static-Server\\\",\\r\\n    Description = \\\"Static\\\",\\r\\n    Version = \\\"1.0.0\\\",\\r\\n\\r\\n    Author = {\\r\\n        Developers = {\\r\\n            \\\"CoreByte\\\"\\r\\n        },\\r\\n        Contributors = {}\\r\\n    },\\r\\n\\r\\n    Dependencies = {\\r\\n        Luvit = {\\r\\n            \\\"creationix/weblit\\\",\\r\\n            \\\"creationix/coro-spawn\\\",\\r\\n            \\\"creationix/mime\\\",\\r\\n            \\\"luvit/json\\\",\\r\\n            \\\"creationix/base64\\\"\\r\\n        },\\r\\n        Git = {},\\r\\n        Dua = {}\\r\\n    },\\r\\n\\r\\n    Contact = {\\r\\n        Website = \\\"\\\",\\r\\n        Source = \\\"\\\",\\r\\n        Socials = {}\\r\\n    },\\r\\n\\r\\n    Entrypoints = {\\r\\n        Main = \\\"ga.corebyte.Server\\\"\\r\\n    }\\r\\n\\r\\n}\\r\\n\"\n  }\n}",
    "/package.info.lua":"-- See https://github.com/Dot-lua/TypeWriter/wiki/package.info.lua-format for more info\r\n\r\nreturn { InfoVersion = 1, -- Dont touch this\r\n\r\n    ID = \"Static\", -- A unique id \r\n    Name = \"Static\",\r\n    Description = \"Static server\",\r\n    Version = \"1.0.0\",\r\n\r\n    Author = {\r\n        Developers = {\r\n            \"CoreByte\"\r\n        },\r\n        Contributors = {}\r\n    },\r\n\r\n    Dependencies = {\r\n        Luvit = {\r\n            \"creationix/weblit\",\r\n            \"creationix/coro-spawn\",\r\n            \"creationix/mime\",\r\n            \"luvit/json\",\r\n            \"creationix/base64\",\r\n            \"luvit/url\"\r\n        },\r\n        Git = {},\r\n        Dua = {}\r\n    },\r\n\r\n    Contact = {\r\n        Website = \"\",\r\n        Source = \"\",\r\n        Socials = {}\r\n    },\r\n\r\n    Entrypoints = {\r\n        Main = \"ga.corebyte.Static.Test\"\r\n    }\r\n\r\n}\r\n"
  }
}