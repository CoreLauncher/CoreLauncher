name: Release
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs: 
  check:
    name: Check existing release
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version from package.json
        id: pkg
        run: echo "version=$(bun run --silent 'console.log(require(\"./package.json\").version)')" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check_release
        uses: actions/github-script@v7
        with:
          script: |
            const tag = `v${process.env.VERSION || core.getInput('version') || '${{ steps.pkg.outputs.version }}'}`;
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const exists = releases.data.some(r => r.tag_name === tag);
            core.setOutput('exists', exists);
        env:
          VERSION: ${{ steps.pkg.outputs.version }}

      - name: Exit if release exists
        if: ${{ steps.check_release.outputs.exists == true }}
        run: |
          echo "Release already exists for version ${{ steps.pkg.outputs.version }}. Exiting."
          exit 0
  
  build-windows:
    name: Build Windows Binary
    runs-on: windows-latest
    needs: check
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install bun
        uses: oven-sh/setup-bun@v2
        
      - name: Install dependencies
        run: bun install